@use 'sass:map';

$types: primary, info, success, warning, error;
$prefix: 's';

// colors
$colors: (
  'white': #fff,
  'black': #000,
  'info': (
    'base': #2080f0
  ),
  'primary': (
    'base': #2080f0
  ),
  'success': (
    'base': #18a058
  ),
  'warning': (
    'base': #f0a020
  ),
  'error': (
    'base': #d03050
  )
);
$color-white: map.get($colors, 'white');
$color-black: map.get($colors, 'black');

@function test() {
  @return 1;
}

@each $type in $types {
  @for $i from 1 through 9 {
    $colors: map.deep-merge(
      (
        $type: (
          'light-#{$i}': get-mix-color-light(map.get($colors, $type, 'base'), $i),
          'dark-#{$i}': get-mix-color-dark(map.get($colors, $type, 'base'), $i)
        )
      ),
      $colors
    );
  }
}

// text-color
$text-color: (
  'default': #333639
);
$text-color: map.merge(
  (
    'secondary': get-mix-color-light(map.get($text-color, 'default'), 3),
    'placeholder': get-mix-color-light(map.get($text-color, 'default'), 4),
    'disabled': get-mix-color-light(map.get($text-color, 'default'), 5)
  ),
  $text-color
);

// background
$bg-color: (
  'default': #f5f5f5
);

// border-color
$border-color: (
  'default': #e0e0e6
);

// border-radius
$border-radius: (
  'default': 4px,
  'small': 2px,
  'large': 6px,
  'round': 30px,
  'circle': 100%
);

// shadow
$shadow-color: rgb(0 0 0 / 20%);
$shadow: (
  'default': 0 1px 6px $shadow-color,
  'top': 0 -1px 6px $shadow-color,
  'bottom': 0 1px 6px $shadow-color,
  'left': -1px 0 6px $shadow-color,
  'right': 1px 0 6px $shadow-color
);

// padding
$padding: (
  'default': 24px,
  'small': 16px,
  'large': 32px
);

// font-size
$font-size: (
  'default': 14px,
  'small': 13px,
  'large': 15px
);

// opacity-disabled
$opacity-disabled: 0.6;
